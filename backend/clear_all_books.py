#!/usr/bin/env python3
"""
Script para eliminar todos los libros de la base de datos
√öSESE CON PRECAUCI√ìN - ESTA ACCI√ìN NO SE PUEDE DESHACER
"""

import os
import sys
from sqlalchemy.orm import Session
from database import SessionLocal, engine
import models

def clear_all_books():
    """Elimina todos los libros de la base de datos"""
    
    print("‚ö†Ô∏è  ADVERTENCIA: ESTA ACCI√ìN ELIMINAR√Å TODOS LOS LIBROS")
    print("=" * 60)
    print("‚Ä¢ Todos los registros de libros ser√°n eliminados")
    print("‚Ä¢ Los archivos f√≠sicos de libros se mantendr√°n")
    print("‚Ä¢ Las portadas se mantendr√°n hasta que uses el bot√≥n de limpieza")
    print("‚Ä¢ ESTA ACCI√ìN NO SE PUEDE DESHACER")
    print("=" * 60)
    
    # Confirmaci√≥n del usuario
    confirm = input("¬øEst√°s seguro de que quieres continuar? (escribe 'SI' para confirmar): ")
    
    if confirm != "SI":
        print("‚ùå Operaci√≥n cancelada")
        return
    
    # Crear sesi√≥n de base de datos
    db = SessionLocal()
    
    try:
        # Contar libros antes de eliminar
        total_books = db.query(models.Book).count()
        print(f"üìä Total de libros a eliminar: {total_books}")
        
        if total_books == 0:
            print("‚úÖ No hay libros para eliminar")
            return
        
        # Eliminar todos los libros
        deleted_count = db.query(models.Book).delete()
        db.commit()
        
        print(f"‚úÖ {deleted_count} libros eliminados exitosamente")
        print("üìù La base de datos est√° lista para empezar desde cero")
        
        # Verificar que no quedan libros
        remaining_books = db.query(models.Book).count()
        print(f"üìä Libros restantes en BD: {remaining_books}")
        
    except Exception as e:
        db.rollback()
        print(f"‚ùå Error al eliminar libros: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    clear_all_books()
