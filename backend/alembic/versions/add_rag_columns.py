"""add rag columns to books table

Revision ID: add_rag_columns
Revises: recreate_books_table_nullable
Create Date: 2024-12-20 12:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'add_rag_columns'
down_revision = 'recreate_books_table_nullable'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Agregar columnas para RAG tracking
    op.add_column('books', sa.Column('rag_processed', sa.Boolean(), nullable=True, default=False))
    op.add_column('books', sa.Column('rag_book_id', sa.String(), nullable=True))
    op.add_column('books', sa.Column('rag_chunks_count', sa.Integer(), nullable=True))
    op.add_column('books', sa.Column('rag_processed_date', sa.DateTime(timezone=True), nullable=True))
    
    # Crear índices para mejorar performance
    op.create_index(op.f('ix_books_rag_processed'), 'books', ['rag_processed'], unique=False)
    op.create_index(op.f('ix_books_rag_book_id'), 'books', ['rag_book_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Eliminar índices
    op.drop_index(op.f('ix_books_rag_book_id'), table_name='books')
    op.drop_index(op.f('ix_books_rag_processed'), table_name='books')
    
    # Eliminar columnas RAG
    op.drop_column('books', 'rag_processed_date')
    op.drop_column('books', 'rag_chunks_count')
    op.drop_column('books', 'rag_book_id')
    op.drop_column('books', 'rag_processed')
    # ### end Alembic commands ###
